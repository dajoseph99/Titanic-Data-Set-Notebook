{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Exploring the Titanic Data Set\n",
    "\n",
    "The goal of this Udacity project is to explore the Titanic data set and understand what factors made people more likely to survive.\n",
    "\n",
    "I stared out my investigation by importing the python libraries and the Titanic data set.\n",
    "\n",
    "I ran .info, .describe and .head functions to get a look at the data.\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false,
    "nbpresent": {
     "id": "60a39fe5-376b-4354-832b-9fbfb274757a"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 12 columns):\n",
      "PassengerId    891 non-null int64\n",
      "Survived       891 non-null int64\n",
      "Pclass         891 non-null int64\n",
      "Name           891 non-null object\n",
      "Sex            891 non-null object\n",
      "Age            714 non-null float64\n",
      "SibSp          891 non-null int64\n",
      "Parch          891 non-null int64\n",
      "Ticket         891 non-null object\n",
      "Fare           891 non-null float64\n",
      "Cabin          204 non-null object\n",
      "Embarked       889 non-null object\n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 83.6+ KB\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import unicodecsv\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import pylab as P\n",
    "        \n",
    "filename = '/Users/douglasjoseph-iMac/Documents/UdacityNDIP/Titanic Data Set/titanic_data.csv'\n",
    "titanic_df = pd.read_csv(filename)\n",
    "print titanic_df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When I ran describe function, I noticed that the Age was not populated on all rows.  The Age attribute was in 714 out of 891 passenger rows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
      "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
      "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
      "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
      "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
      "25%     223.500000    0.000000    2.000000         NaN    0.000000   \n",
      "50%     446.000000    0.000000    3.000000         NaN    0.000000   \n",
      "75%     668.500000    1.000000    3.000000         NaN    1.000000   \n",
      "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
      "\n",
      "            Parch        Fare  \n",
      "count  891.000000  891.000000  \n",
      "mean     0.381594   32.204208  \n",
      "std      0.806057   49.693429  \n",
      "min      0.000000    0.000000  \n",
      "25%      0.000000    7.910400  \n",
      "50%      0.000000   14.454200  \n",
      "75%      0.000000   31.000000  \n",
      "max      6.000000  512.329200  \n"
     ]
    }
   ],
   "source": [
    "print titanic_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "titanic_df.drop(['PassengerId','Ticket','Fare'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass                                               Name  \\\n",
       "0         0       3                            Braund, Mr. Owen Harris   \n",
       "1         1       1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n",
       "2         1       3                             Heikkinen, Miss. Laina   \n",
       "3         1       1       Futrelle, Mrs. Jacques Heath (Lily May Peel)   \n",
       "4         0       3                           Allen, Mr. William Henry   \n",
       "\n",
       "      Sex   Age  SibSp  Parch Cabin Embarked  \n",
       "0    male  22.0      1      0   NaN        S  \n",
       "1  female  38.0      1      0   C85        C  \n",
       "2  female  26.0      0      0   NaN        S  \n",
       "3  female  35.0      1      0  C123        S  \n",
       "4    male  35.0      0      0   NaN        S  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_df.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let’s take a look a histogram of the passengers by Age.\n",
    "The describe function shows the passenger's mean Age is 29.7.\n",
    "Below is a histogram of the passenger's ages."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nbaocrZ6zqy8VPp/qMuMxqrcpHkD1qm9jvdh5mfnJNuuQMnNnRNwDXBsR91Jd7PELPS5rkN0KPLx+\na/k+qo8CnNryNr8JbIiIDVTPXV+juqBFmlWrR3YR8WLgRZn56ohYB7yJ6i2nQzPz3a1tWJKkSVp/\nGzMiltaXEb+S6hLuPVRHegdRnfxfP3HJtyRJbWj9ApU66C6k+mzRx4AvU30AeB2wCXh72zVIkha3\nBfmcXWaeEhGrqa6ketqkD6JeStXxYlrj4+PjS5Y0ubpbkrSIzCkY2r5A5WTgiMx8F3A31UUqn4mI\n0zPzP6k+8HrdTOtYsmQJW7bsbLPM1g0Pr3AMfcAx9IdBH8Og1w/ljGEu2j6y+wzwkYi4qt7Weqqv\n7vjL+sq471F96FeSpNa0GnaZuRv4pQ43PaPN7UqSNJkdVCRJxTPsJEnFM+wkScUz7CRJxTPsJEnF\nM+wkScUz7CRJxTPsJEnFM+wkScUz7CRJxTPsJEnFM+wkScUz7CRJxTPsJEnFM+wkScUz7CRJxTPs\nJEnFM+wkScUz7CRJxTPsJEnFM+wkScUz7CRJxTPsJEnFM+wkScUz7CRJxTPsJEnFM+wkScUz7CRJ\nxTPsJEnFM+wkScUz7CRJxTPsJEnFM+wkScUz7CRJxTPsJEnFM+wkScUz7CRJxTPsJEnFM+wkScUz\n7CRJxTuo1wWofKOjo4yMbNpv/po1RzI0NNSDiiQtNoadWjcyson1Z13GspWr987bveMOzt1wEmvX\nHtXDyiQtFoadFsSylatZftgjel2GpEXKc3aSpOIZdpKk4hl2kqTiGXaSpOIZdpKk4rV6NWZELAXO\nBwIYA14L/BC4sJ6+ITNPa7MGSZLaPrJ7ETCemc8AzgT+FDgHOCMz1wFLI+LFLdcgSVrkWg27zPws\n8Jp68tHAduCYzLymnnc58Ow2a5AkqfVzdpk5FhEXAu8F/hZYMunmncDKtmuQJC1uC9JBJTNPiYjV\nwH8Ch0y6aQVw12z3Hx5e0VZpC2Yxj2H79uUd569atXzBfy+L+XHoJ4M+hkGvH8oYw1y0fYHKycAR\nmfku4G5gFLg2ItZl5lXAC4ArZ1vPli072yyzdcPDKxb1GLZt2zXt/IX8vSz2x6FfDPoYBr1+KGcM\nc9H2kd1ngI9ExFX1tk4Hvg18KCIOBm4EPtVyDZKkRa7VsMvM3cAvdbjp+Da3K0nSZH6oXJJUPMNO\nklQ8w06SVDzDTpJUPMNOklQ8w06SVDzDTpJUPMNOklQ8w06SVDzDTpJUPMNOklQ8w06SVDzDTpJU\nPMNOklQ8w06SVDzDTpJUPMNOklQ8w06SVDzDTpJUPMNOklQ8w06SVDzDTpJUPMNOklQ8w06SVDzD\nTpJUPMNOklQ8w06SVDzDTpJUvIN6XYAG1+joKCMjm/abv2bNkQwNDfWgIknqzLDTARsZ2cT6sy5j\n2crVe+ft3nEH5244ibVrj+phZZK0L8NO87Js5WqWH/aIXpchSTPynJ0kqXiGnSSpeIadJKl4hp0k\nqXiGnSSpeIadJKl4hp0kqXiGnSSpeIadJKl4dlBZZOxnKWkxMuwWGftZSlqMDLtFyH6WkhYbz9lJ\nkopn2EmSimfYSZKKZ9hJkorX2gUqEXEQ8GFgDfAA4B3AfwOfAzbWi52XmZ9sqwZJkqDdqzFPBu7M\nzF+LiMOArwF/BJydme9ucbuSJO2jzbD7BDBx1LYUuBc4FvjxiHgJcBOwPjN/0GINkiS1d84uM3dn\n5g8iYgVV6P0B8BXgzZm5DtgEvL2t7UuSNKHVD5VHxCOBzwB/mZkfj4iVmbmjvvlS4L1tbl/NjI+N\nsXnzLfvNn9pCbGqrsU73WQidWp7NVivA9u3LOfTQ1bZFkxahNi9QeRhwBXBaZn6xnn1FRLwhM68F\nngVc12Rdw8MrWqpy4fTLGLZvX77fvD07t3D2JXeybOVte+ft3nEHH33nyzn66KP3zvv+9+/Yp9XY\n1ltv5PAjHrPf+latWr7PeDtts9NyTW3cuHGfOjrVOnWZ6ZYbRP3ytzQfgz6GQa8fyhjDXLR5ZPdW\n4CHAmRHxNmAceBPwnoi4B/ge8JomK9qyZWdrRS6E4eEVfTOGbdt2dZzfqYXYtm279tY9PLyCbdt2\n7bPc7h23T7uNyeOdbptTl5vLGKbW22mbs41pEPXT39KBGvQxDHr9UM4Y5qK1sMvMNwJv7HDTM9ra\npiRJnfihcklS8Qw7SVLxDDtJUvEMO0lS8Qw7SVLxDDtJUvEMO0lS8VptFyZNp2mLMknqBsNOPTFd\ni7JzN5zE2rVH9bAySSUy7NQzndp5SVIbPGcnSSqeYSdJKp5hJ0kqnmEnSSqeYSdJKp5hJ0kqnmEn\nSSqeYSdJKp5hJ0kqnmEnSSqeYSdJKp5hJ0kqnmEnSSqeYSdJKp5hJ0kqnmEnSSqeYSdJKp5hJ0kq\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11a752510>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "titanic_df.Age.hist(bins=80,figsize = (7,7))\n",
    "plt.xlabel(\"Age\")\n",
    "plt.ylabel(\"Number of Person\")\n",
    "plt.title(\"Histogram of Passenger Age\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Kaggle web site also provided a tutorial of how to review and clean up the data with Python.\n",
    "## So, I will also take advantage of its tutorial and follow some of its steps.\n",
    "## Link to the [kaggle](https://www.kaggle.com/c/titanic/details/getting-started-with-python-ii) tutorial.\n",
    "\n",
    "The Kaggle website suggested to fill in the rows with missing age values.\n",
    "Other websites suggested to remove rows with missing age values.\n",
    "For the purpose of learning to code, I wanted to filling in the missing values using the \n",
    "approach on the Kaggle website (but for full disclosure, I have not taken enough statistics or data wrangling classes to know when its best to drop the rows with missing data, or when to 'make up' new values).\n",
    " \n",
    "Anyhow, for rows with Age containing 'NaN' (not a number), Kaggle code calculates the median age value for each class by sex of passenger.  Kaggle also adds a new column called AgeFill will contain the new calculated age.##"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "I wanted to know if passengers traveling parents or siblings on board, increased the chances for survival.\n",
    "Again, using kaggle as a guide, created a new column called Family\n",
    "and first populating it with a 4 and then filling in the column with a 1 if there was a passenger with either a sibling or a parent, or 0 if the passenger was traveling alone."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false,
    "nbpresent": {
     "id": "1680f05e-c760-42b3-80c0-05a7c461e4fd"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/douglasjoseph-iMac/anaconda/lib/python2.7/site-packages/pandas/core/indexing.py:132: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  self._setitem_with_indexer(indexer, value)\n"
     ]
    }
   ],
   "source": [
    "titanic_df['Family'] = 4\n",
    "titanic_df['Family'] =  titanic_df[\"Parch\"] + titanic_df[\"SibSp\"]\n",
    "titanic_df['Family'].loc[titanic_df['Family'] > 0] = 1\n",
    "titanic_df['Family'].loc[titanic_df['Family'] == 0] = 0\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is where I started to look at the data by different attributes.\n",
    "\n",
    "The crosstab below shows the absolute values of males and females who survived (1) and those who did not (0)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Survived</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>female</th>\n",
       "      <td>81</td>\n",
       "      <td>233</td>\n",
       "      <td>314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>male</th>\n",
       "      <td>468</td>\n",
       "      <td>109</td>\n",
       "      <td>577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>549</td>\n",
       "      <td>342</td>\n",
       "      <td>891</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Survived    0    1  All\n",
       "Sex                    \n",
       "female     81  233  314\n",
       "male      468  109  577\n",
       "All       549  342  891"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(titanic_df[\"Sex\"],titanic_df[\"Survived\"],margins=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The crosstab below shows the percentage values of males and females who survived (1) and those who did not (0).\n",
    "\n",
    "I found the code to present data in percentages from [www.analyticsvidhya.com](\n",
    "https://www.analyticsvidhya.com/blog/2016/01/12-pandas-techniques-python-data-manipulation/)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Survived</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>female</th>\n",
       "      <td>0.257962</td>\n",
       "      <td>0.742038</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>male</th>\n",
       "      <td>0.811092</td>\n",
       "      <td>0.188908</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>0.616162</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Survived         0         1  All\n",
       "Sex                              \n",
       "female    0.257962  0.742038  1.0\n",
       "male      0.811092  0.188908  1.0\n",
       "All       0.616162  0.383838  1.0"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def percConvert(ser):\n",
    "  return ser/float(ser[-1])\n",
    "  \n",
    "pd.crosstab(titanic_df[\"Sex\"],titanic_df[\"Survived\"],margins=True).apply(percConvert, axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For the stacked barchart, I took the crosstab code and added a plot.bar function at the end of it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "collapsed": false,
    "nbpresent": {
     "id": "5e77a612-7686-4979-9bbd-1d1a5fa7a558"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1192796d0>"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nVgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x118756a10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.crosstab(titanic_df[\"Sex\"],titanic_df[\"Survived\"],margins=False).plot.bar(stacked=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Survived</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>374</td>\n",
       "      <td>163</td>\n",
       "      <td>537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>175</td>\n",
       "      <td>179</td>\n",
       "      <td>354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>549</td>\n",
       "      <td>342</td>\n",
       "      <td>891</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Survived    0    1  All\n",
       "Family                 \n",
       "0         374  163  537\n",
       "1         175  179  354\n",
       "All       549  342  891"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(titanic_df[\"Family\"],titanic_df[\"Survived\"],margins=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Survived</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.696462</td>\n",
       "      <td>0.303538</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.494350</td>\n",
       "      <td>0.505650</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>0.616162</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Survived         0         1  All\n",
       "Family                           \n",
       "0         0.696462  0.303538  1.0\n",
       "1         0.494350  0.505650  1.0\n",
       "All       0.616162  0.383838  1.0"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def percConvert(ser):\n",
    "  return ser/float(ser[-1])\n",
    "  \n",
    "pd.crosstab(titanic_df[\"Family\"],titanic_df[\"Survived\"],margins=True).apply(percConvert, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {
    "collapsed": false,
    "nbpresent": {
     "id": "eca6d962-57ef-4626-bb35-f5458ae67037"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x118770590>"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11929de10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.crosstab(titanic_df[\"Family\"],titanic_df[\"Survived\"],margins=False).plot.bar(stacked=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Survived</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pclass</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>80</td>\n",
       "      <td>136</td>\n",
       "      <td>216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>97</td>\n",
       "      <td>87</td>\n",
       "      <td>184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>372</td>\n",
       "      <td>119</td>\n",
       "      <td>491</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>549</td>\n",
       "      <td>342</td>\n",
       "      <td>891</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Survived    0    1  All\n",
       "Pclass                 \n",
       "1          80  136  216\n",
       "2          97   87  184\n",
       "3         372  119  491\n",
       "All       549  342  891"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(titanic_df[\"Pclass\"],titanic_df[\"Survived\"],margins=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Survived</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pclass</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.370370</td>\n",
       "      <td>0.629630</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.527174</td>\n",
       "      <td>0.472826</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.757637</td>\n",
       "      <td>0.242363</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>0.616162</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Survived         0         1  All\n",
       "Pclass                           \n",
       "1         0.370370  0.629630  1.0\n",
       "2         0.527174  0.472826  1.0\n",
       "3         0.757637  0.242363  1.0\n",
       "All       0.616162  0.383838  1.0"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def percConvert(ser):\n",
    "  return ser/float(ser[-1])\n",
    "  \n",
    "pd.crosstab(titanic_df[\"Pclass\"],titanic_df[\"Survived\"],margins=True).apply(percConvert, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "collapsed": false,
    "nbpresent": {
     "id": "5b7c89e0-48f1-4614-b389-46210ea92ad6"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x118756ad0>"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n8v8BYeZ1StHLYMIAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1183b6550>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.crosstab(titanic_df[\"Pclass\"],titanic_df[\"Survived\"],margins=False).plot.bar(stacked=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "collapsed": false,
    "nbpresent": {
     "id": "916c6a20-7792-4fdc-b94b-6f60597c086a"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Survived</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pclass</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.370370</td>\n",
       "      <td>0.629630</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.527174</td>\n",
       "      <td>0.472826</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.757637</td>\n",
       "      <td>0.242363</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>0.616162</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Survived         0         1  All\n",
       "Pclass                           \n",
       "1         0.370370  0.629630  1.0\n",
       "2         0.527174  0.472826  1.0\n",
       "3         0.757637  0.242363  1.0\n",
       "All       0.616162  0.383838  1.0"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def percConvert(ser):\n",
    "  return ser/float(ser[-1])\n",
    "  \n",
    "pd.crosstab(titanic_df[\"Pclass\"],titanic_df[\"Survived\"],margins=True).apply(percConvert, axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I wanted to also learn how Seaborn plotted worked, so I created plots with Seaborn."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>Family</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass                                               Name  \\\n",
       "0         0       3                            Braund, Mr. Owen Harris   \n",
       "1         1       1  Cumings, Mrs. John Bradley (Florence Briggs Th...   \n",
       "2         1       3                             Heikkinen, Miss. Laina   \n",
       "3         1       1       Futrelle, Mrs. Jacques Heath (Lily May Peel)   \n",
       "4         0       3                           Allen, Mr. William Henry   \n",
       "\n",
       "      Sex   Age  SibSp  Parch Cabin Embarked  Family  \n",
       "0    male  22.0      1      0   NaN        S       1  \n",
       "1  female  38.0      1      0   C85        C       1  \n",
       "2  female  26.0      0      0   NaN        S       0  \n",
       "3  female  35.0      1      0  C123        S       1  \n",
       "4    male  35.0      0      0   NaN        S       0  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11c0df190>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "g = sns.FacetGrid(titanic_df, col=\"Pclass\", sharex=False,\n",
    "                  gridspec_kws={\"width_ratios\": [5, 3, 3]})\n",
    "g.map(sns.boxplot, \"Sex\", \"Age\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n9fXuznwZGRn+DI0UQqVSYcrkoZUGGxr6YDI5kJWVxeNoV4jJXKHOTebcEUpXqrCwEGq1Bj315x9T\nE0Xg1Kk+RESE874mjdjEiROH/L262n0Ch420rhyTuUJFRERApTr738tkTlcqPDwc06dPg62vHdbu\nxiFfM5sdMJsdmDBhIsu30oiNHz+0e1pNTQ90uiDW9x8BJnOF0mg0iIg42yVNr9dLGA3JlacQTM+p\nygt+PS0tzZ/hkMJERUUN/Lmvz47OTismTkznEvsIMJkrWGRk5MCfmcxpJNLT0xEZGYm+JgOEQccc\nPVJSUiSIipRCrVYP3KZpbXX3A0hPT5cyJNliMlewiIiIgT8zmdNIqNVq5OTkQHDazjtCBACJiYkS\nREVKcu7+nnOX3ml4mMwVLDz87DI7G2DQSOXk5AAA+poMQx4PDQ1FSEiIFCGRggzeQKlWq5CcnCxh\nNPLFZK5gg5M5j6bRSCUmJiImJgbmtpMQXM6Bx7mLnbzBUz4YAOLi4vlZNUJM5go2uHwr3yA0UiqV\nCtOnT4fgtMPSeRoQBQDnL48SjcTgSQeb9Ywck7mCMZmTt0z+sbiHpb1+4LHBGyyJvMFTuZKuHJO5\ngg2+n8kmK3Q1JkyYAI1WC3N7PdS6MdBoNJg5c6bUYZHCeHpK0JVjMlewwY1VWOeYrkZQUBDSUlNh\nM7ZBpVIjJCQEY8eOlTosUoCgoCBMnDgR0dHR51WEo+HjyXwFG1z1jbvZ6WqNGzcO9fX1cNnMgC78\n8t9ANAxqtRrr1q2TOgzZ48xcwVjClbwpNTVV6hCI6CKYzBWMs3HypqSkpIE/n9N3hYgkxmSuYIP7\nl7PWMV2tmJiYgVMRQUF8PRGNJirx3N6GpCh1dXWwWq3cAEdeYTAYcObMGUycOJGdrYhGESZzIiIi\nmeMyOxERkcwxmRMREckckzkREZHMMZkTERHJHJM5ERGRzDGZExERyRyTORERkcwxmRMREckckzkR\nEZHMMZkTERHJHJM5ERGRzDGZExERyRyTORERkcwxmRMREckckzkREZHMMZkTERHJnNbfFzSZTNi4\ncSPMZjMcDgcee+wxzJw5EwcPHsTTTz8NrVaLoqIibNiwwd+hERERyZLfZ+avv/46ioqK8Pbbb2Pz\n5s146qmnAABPPvkknnvuObz77rs4dOgQqqqq/B0aERGRLPl9Zn7XXXdBp9MBAJxOJ/R6PUwmExwO\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11e046b90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(style=\"whitegrid\")\n",
    "\n",
    "# Draw a nested violinplot and split the violins for easier comparison\n",
    "sns.violinplot(x=\"Pclass\", y=\"Age\", hue=\"Sex\", data=titanic_df, split=True,\n",
    "               scale=\"count\", inner=\"quart\", palette={\"male\": \"b\", \"female\": \"y\"})\n",
    "sns.despine(left=True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1232b9d90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(style=\"whitegrid\")\n",
    "survivednot_df = titanic_df[titanic_df.Survived == 0]\n",
    "\n",
    "# Draw a nested violinplot and split the violins for easier comparison\n",
    "sns.violinplot(x=\"Pclass\", y=\"Age\", hue=\"Sex\", data=survivednot_df, split=True,\n",
    "               scale=\"count\", inner=\"quart\", palette={\"male\": \"b\", \"female\": \"y\"})\n",
    "sns.despine(left=True)\n",
    "\n",
    "#(df[\"C\"] == 900)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11b861e10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#sns.set(style=\"whitegrid\", palette=\"paired\", color_codes=True)\n",
    "survived_df = titanic_df[titanic_df.Survived == 1]\n",
    "\n",
    "# Draw a nested violinplot and split the violins for easier comparison\n",
    "sns.violinplot(x=\"Pclass\", y=\"Age\", hue=\"Sex\", data=survived_df, split=True,\n",
    "               scale=\"count\", inner=\"quart\", palette={\"male\": \"b\", \"female\": \"y\"})\n",
    "sns.despine(left=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "collapsed": false,
    "nbpresent": {
     "id": "4b05a3a1-112a-4665-aa76-c37346bcafbe"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x11767fe50>"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x118748510>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "g = sns.factorplot(x=\"Survived\", col=\"Sex\", data = titanic_df, col_wrap=4,kind=\"count\", size=4, aspect=.9,palette=\"Paired\")\n",
    "g.set_ylabels(\"survival count\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1190a9e90>"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\npFr9f1BM3I6OoIngAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x119003cd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "g = sns.factorplot(x=\"Survived\", col=\"Family\", data = titanic_df, col_wrap=4,kind=\"count\", size=4, aspect=.9,palette=\"Paired\")\n",
    "g.set_ylabels(\"survival count\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "collapsed": false,
    "nbpresent": {
     "id": "46722888-f52c-4cf0-b682-3235c407dcdc"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x119003550>"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxoAAAEaCAYAAACW3yF7AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAHbtJREFUeJzt3X2YXWV57/HvJEOQmCEmGqIRDS9Hb9QKGiyoBw2oWKG1\ngMceq+ILKohNQaxaDxFfL4O0Ap5G1AsxFUtRi4haQQUtCIRjERCQHPHmzWgxygnMkGQaIW9z/lh7\n6jZOZvZMnpW998z3c1252HuttZ997yT3hN9+1rNWz9DQEJIkSZJU0rR2FyBJkiRp8jFoSJIkSSrO\noCFJkiSpOIOGJEmSpOIMGpIkSZKKM2hIkiRJKq633QWo+0TEQuAu4P82Ns0AfgWckJlrdvCaNwGH\nZ+YJu6bKkUXEkcD7MvNl7axD6nTd2OcR8UTgC8ATga3AezPzmnbUInWLLu71i4B5wEbgHZl5eztq\n0eic0dBE/SozFzV+/RFwC3DeGK9p201bIqInIt4NfBn/3kut6qo+Bz4BfCsznwu8DvhSRPS0sR6p\nW3Rbr58JXJqZzwE+AnymjbVoFM5oqJTrgFcCRMTLgLOBHuAXwOubD4yIvwD+BngMsAfwtsxcGRF/\nA7yR6pvIH2XmOyLi2cDngOnAI1TfsNzbNNbewLf4wx94L8rM/2x6/gwggLcBpxb5xNLU0+l9/jVg\neAbjHmB3YBawYSc/tzTVdHSvZ+ZbmvbtB/Tv9CdWLXq8M7jGqzHNek1m7td4vhvVD45HgHcCvwSO\nzMw7IuJjwK+BQWAx8FbgKuA1mdkfEScAxwKvahz3JGAb1TcpHwOWAVdk5tcaP8xmZObFO1H7YuBD\nmfmSiY4hTQXd3OeNet8HvDwzX7oz40iTXTf3ekTcCSwEjsnM7010HNXHGQ1N1JMj4sdU33DMAH4E\nnA48G7g/M+8AyMwz4L/O5yQzhyLiVcArIyKAw4Etmbk1Im4Abga+CXw6M38dEVcAn46Io4DLgUub\ni9ju24/hUySG+MNvOiWNX1f2eUScBpxI9T9CksbWlb2emc+IiIOAqyIiMvPhcr8lKsGgoYn6VWYu\n2n5jRGzmdz8ciIg9gb6m548FbgL+CbgW+AmwBCAzj4uIQ4GjgCsj4nWNbz3+D/BnwGnA0cBJw+Nl\n5v3Ac8t/PEl0YZ9HxN83xn5RZv56fB9XmrK6qtcj4mjg2sz8z8y8PSJ+QXUK1Y/H/clVKxfFaqJ2\ntMAygSdExAGN538LvL1p/9OBrZl5JtW51EcB0yPiCY0p0Dsy88NUU7EHRsRXgEMz8wLgAxgqpF2p\nq/q8MZOxGPjvhgxpXLqq14E30QgoEfFMYD7wswmOpRoZNDRRIy7uycxHgeOBiyLiNqpF2Gc1HXIb\ncHtEJNVVLTYACzPzQeB84OaIuBl4HHAh1ZUllkbELVRXlHlXPR9H0gi6rc8/COwF/CAibo2IHzcu\ngylpdN3W6+8E/qRR0wrgLzNz4wTHUo1cDC5JkiSpuNrXaETEXlSLgV5GdYmzC6muQLAqM5c0jjmR\nagpsM7AsM6+ouy5JkiRJ9al1RiMieoFLgGcCf041TXZ2Zl4fEZ8Fvgv8O/A9YBEwE1gJHJyZm2sr\nTJIkSVKt6l6jcTbwWWAN1UKjRZl5fWPfd4AjgUOAlZm5JTPXA3cDB9ZclyRJkqQa1RY0IuLNwP9r\n3EBl+GoGze+3ARi+TNq6pu2DwOy66pIkSZJUvzrXaJwAbIuII4GDqK6xPK9pfx/wMLCeKnBsv31U\nW7ZsHertnV6uWkm70o4upfgH7HWpa9nn0tSww17fJVedioirgZOp1mick5nXNdZoXA1cR3V95T8G\n9gB+CDwnMzeNNubatRu8XJbUpebN62v5f0Dsdak72efS1DBar+/qO4O/B7ggInYD7gQubdy+fjnV\nIvAeYOlYIUOSJElSZ+va+2j47YfUvfymU5r87HNpahit170zuCRJkqTiDBqSJEmSijNoSJIkSSrO\noCFJkiSpOIOGJEmSpOIMGpIkSZKKM2hIkiRJKs6gIUmSJKk4g4YkSZKk4gwakiRJkorrbXcBkiRJ\nrdq6dSurV9/X7jKmtH322Y/p06e3uwx1AYOGJEnqGqtX38e3b76d+Qv2bncpU9IDa+7naGD//Z/W\n7lLUBQwakiSpq8xfsDcLFu7b7jIkjcE1GpIkSZKKM2hIkiRJKs6gIUmSJKk4g4YkSZKk4gwakiRJ\nkoozaEiSJEkqzqAhSZIkqbha76MREdOAC4AAtgEnAzOAy4G7God9NjO/GhEnAicBm4FlmXlFnbVJ\nkiRJqk/dN+x7JTCUmYdFxGLgTOBbwDmZ+cnhgyJiPnAKsAiYCayMiKsyc3PN9UmSJEmqQa1BIzO/\nGRHfajzdBxgADgYiIo6lmtV4F3AIsDIztwDrI+Ju4EDgljrrkyRJklSP2tdoZOa2iLgQ+AfgYuBG\n4D2ZuRi4D/gQsCewrullg8DsumuTJEmSVI+6T50CIDPfHBF7AT8CXpCZv27s+gawHLiWKmwM6wMe\nHm3MOXNm0ts7vY5yJXUQe12a/MbT5wMDs2DNQzVXpNHMnTuLefP62l2GukDdi8GPB/bOzLOAR6gW\nhF8WEadm5k3AS6lOj7oJWBYRM4A9gAOAVaONPTCwsc7SJdVoPP9A2etSd6qrz/v7BydSjgrq7x9k\n7doN7S5DHWK0Xq97RuMy4AsRcW3jvd4J/AdwXkRsAn4DnJSZgxGxHFgJ9ABLM3NTzbVJkiRJqknd\ni8E3Aq8ZYddhIxy7AlhRZz2SJEmSdg1v2CdJkiSpOIOGJEmSpOIMGpIkSZKKM2hIkiRJKs6gIUmS\nJKk4g4YkSZKk4gwakiRJkoozaEiSJEkqzqAhSZIkqTiDhiRJkqTiDBqSJEmSijNoSJIkSSrOoCFJ\nkiSpOIOGJEmSpOIMGpIkSZKKM2hIkiRJKs6gIUmSJKk4g4YkSZKk4gwakiRJkoozaEiSJEkqrrfO\nwSNiGnABEMA24GTgUeDCxvNVmbmkceyJwEnAZmBZZl5RZ22SJEmS6lP3jMYrgaHMPAz4AHAmcC6w\nNDMXA9Mi4piImA+cArwAeAXw8YjYrebaJEmSJNWk1qCRmd+kmqUAWAgMAIsy8/rGtu8ARwKHACsz\nc0tmrgfuBg6sszZJkiRJ9al9jUZmbouIC4HlwJeAnqbdG4A9gT5gXdP2QWB23bVJkiRJqketazSG\nZeabI2Iv4CZgj6ZdfcDDwHqqwLH99h2aM2cmvb3TS5cqqcPY69LkN54+HxiYBWseqrkijWbu3FnM\nm9fX7jLUBepeDH48sHdmngU8AmwFbo6IxZl5LXAUcDVVAFkWETOogsgBwKrRxh4Y2Fhn6ZJqNJ5/\noOx1qTvV1ef9/YMTKUcF9fcPsnbthnaXoQ4xWq/XPaNxGfCFiLi28V6nAj8DPt9Y7H0ncGlmDkXE\ncmAl1alVSzNzU821SZIkSapJrUEjMzcCrxlh1+EjHLsCWFFnPZIkSZJ2DW/YJ0mSJKk4g4YkSZKk\n4gwakiRJkoozaEiSJEkqzqAhSZIkqTiDhiRJkqTiDBqSJEmSijNoSJIkSSrOoCFJkiSpOIOGJEmS\npOIMGpIkSZKKM2hIkiRJKs6gIUmSJKk4g4YkSZKk4gwakiRJkoozaEiSJEkqzqAhSZIkqTiDhiRJ\nkqTiDBqSJEmSihszaETEnBG2LaynHEmSJEmTQe+OdkTEU4Ae4NsRcVTj8fBrvg0cMNrAEdEL/COw\nDzADWAb8B3A5cFfjsM9m5lcj4kTgJGAzsCwzr5joB5IkSZLUfjsMGsBHgCOABcB1Tdu3UIWFsRwP\nPJiZb2zMitzWGPOczPzk8EERMR84BVgEzARWRsRVmbl5XJ9EkiRJUsfYYdDIzLcARMT7MvPvJjD2\nJcBXG4+nUc1WHAwcEBHHUs1qvAs4BFiZmVuA9RFxN3AgcMsE3lOSJElSBxhtRmPY5yJiCTCX350+\nRWZ+dLQXZeZGgIjoowocZwC7A5/PzFsj4nTgQ1QzHeuaXjoIzB7Ph5AkSZLUWVoJGpdQBYFVwNB4\nBm+s87gMOC8zvxIRszNzOFR8A1gOXAvs2fSyPuDhscaeM2cmvb3Tx1OOpC5kr0uT33j6fGBgFqx5\nqOaKNJq5c2cxb15fu8tQF2glaDwxM48c78CNtRdXAksy85rG5isj4q8z82bgpVSnR90ELIuIGcAe\nVIvMV401/sDAxvGWJKlDjOcfKHtd6k519Xl//+BEylFB/f2DrF27od1lqEOM1uutBI1bI+LAzPzJ\nON/3dOBxwAci4oNUsyHvAv53RGwCfgOclJmDEbEcWEl1atbSzNw0zveSJEmS1EFaCRp/RBU2HgAe\noQoDQ5m532gvyszTgNNG2HXYCMeuAFa0UIskSZKkLtBK0Diu9iokSZIkTSqtBI3FO9j+TyULkSRJ\nkjR5tBI0jmh6vBvwIqob+Bk0JEmSJI1ozKCRmSc0P4+IucC/1FaRJEmSpK43bQKvGQT2KVyHJEmS\npElkzBmNiLiG392obxqwL3BFnUVJkiRJ6m6trNH4cNPjIeDBzPxpPeVIkiRJmgzGPHUqM68FZgKv\nBF4FPK3uoiRJkiR1tzGDRkT8LdWsxi+BnwPvj4ilNdclSZIkqYu1curU8cChmflbgIi4ALgFOLPO\nwiRJkiR1r1auOjVtOGQ0PAJsqakeSZIkSZNAKzMa/xYRXwMubDx/M3B1XQVJkiRJ6n6tBI3TgJOB\nN1LNgPwb8Lk6i5IkSZLU3Vo5deqxVKdP/QVwKvBEYEatVUmSJEnqaq0EjS8BT2o83tB4zUW1VSRJ\nkiSp67Vy6tTCzPxzgMxcD5wREbfVW5YkSZKkbtbKjMZQRDx7+ElEHABsrq8kSZIkSd2ulRmN9wDf\ni4j7gR7gCVT31pAkSZKkEY0ZNDLz+xHxVODZVDMZmZmP1l6ZJEmSpK7VyowGmbmJ6m7gkiRJkjSm\nloLGREREL/CPwD5Ul8NdBvyU6sZ/24BVmbmkceyJwElUMybLMvOKuuqSJEmSVL9WFoNP1PHAg5n5\nYuAVwHnAucDSzFwMTIuIYyJiPnAK8ILGcR+PiN1qrEuSJElSzXY4oxERXwCGdrQ/M98yxtiXAF9t\nPJ4ObAEWZeb1jW3fAV5ONbuxMjO3AOsj4m7gQDxVS5IkSepao5069YOdGTgzNwJERB9V4Hg/cHbT\nIRuAPYE+YF3T9kFg9s68tyRJkqT22mHQyMwvDj+OiLnAY6kubzsd2LeVwSPiKcBlwHmZ+ZWI+Pum\n3X3Aw8B6qsCx/fZRzZkzk97e6a2UIamL2evS5DeePh8YmAVrHqq5Io1m7txZzJvX1+4y1AXGXAwe\nEWcCS4DdgAeBJwM3A4eO8br5wJXAksy8prH51oh4cWZeBxwFXA3cBCyLiBnAHsABwKqx6hoY2DjW\nIZI61Hj+gbLXpe5UV5/39w9OpBwV1N8/yNq1G9pdhjrEaL3eylWnXgs8BfgH4GPAU4F3t/C604HH\nAR+IiA9Srfd4J/CpxmLvO4FLM3MoIpYDK6lmTJY2LqcrSZIkqUu1EjR+nZnrI2IVcFBmXrbdKVAj\nyszTgNNG2HX4CMeuAFa0UIskSZKkLtBK0FgXEW+gugrUKRGxBphTb1mSJEmSulkr99F4K7BXZv4A\nWA2cD5xRY02SJEmSulwrMxr/E/hngMxsZW2GJEmSpCmulaDxZODfIyKpAsdlw/fIkCRJkqSRjHnq\nVGa+NzP3BZYBzwdui4iLaq9MkiRJUtdqZY0GEdFDdR+NGcA24NE6i5IkSZLU3Vq5Yd+ngGOBW4GL\ngVMz85G6C5MkSZLUvVpZo3EXsCgz19ZdjCRJkqTJYYdBIyJOyszPAXOBd0TE7+3PzI/WXJskSZKk\nLjXajEbPDh5LkiRJ0qh2GDQy8/zGw3XAlzPzgV1TkiRJkqRu5300JEmSJBXnfTQkSZIkFed9NCRJ\nkiQV1+p9NI4BbqM6dcr7aEiSJEkaVStrNB4ADvY+GpIkSZJa1cqpU683ZEiSJEkaj1ZmNH4aER8E\nbgR+O7wxM6+rrSpJkiRJXa2VoDEXOKLxa9gQ8JJaKpIkSZLU9cYMGpl5xFjHSJIkSVKzVq46dQ3V\nDMbvycyWZjQi4lDgrMw8IiKeA1wO3NXY/dnM/GpEnAicBGwGlmXmFa1+AEmSJEmdp5VTpz7c9Hg3\nqkvdDrQyeES8F3gDMNjYdDBwTmZ+sumY+cApwCJgJrAyIq7KzM2tvIckSZKkztPKqVPXbrfp+xFx\nI/DBFsa/BzgOGL6T+MHA0yPiWKpZjXcBhwArM3MLsD4i7gYOBG5p7SNIkiRJ6jStnDr11KanPcCz\ngMe3Mnhmfj0iFjZtuhG4IDNvjYjTgQ9R3QhwXdMxg8DsVsaXJEmS1JlaOXWqeUZjCHiQ6lSnifhG\nZg6Him8Ayxvj79l0TB/w8FgDzZkzk97e6RMsQ1K3sNelyW88fT4wMAvWPFRzRRrN3LmzmDevr91l\nqAu0curUvgXf78qI+OvMvBl4KdXpUTcByyJiBrAHcACwaqyBBgY2FixL0q40nn+g7HWpO9XV5/39\ng2MfpFr19w+ydu2GdpehDjFar7dy6tQhwGHAeVRXjHoucHJmfm0CtbwD+FREbAJ+A5yUmYMRsRxY\nSXVq1tLM3DSBsSVJkiR1iFZOnVoOvA94NdWdwQ8Gvtb4NabM/AXwwsbjW6lCy/bHrABWtFayJEmS\npE43rZVjGlee+lPg0sz8Ja0FFEmSJElTVCtBY2NEvBt4CXB5RLwT8MQ8SZIkSTvUStB4PfBY4H9k\n5gCwAHhdrVVJkiRJ6mqtXHXqV8BHm56/r9aKpHHaunUrq1ff1+4yprR99tmP6dO9BK0kSfod11qo\n661efR9vOOfL7D57XrtLmZIeXbeWi979Wvbf/2ntLkWSJHUQg4Ymhd1nz+Mxc5/U7jIkSZLU0Moa\nDUmSJEkaF4OGJEmSpOIMGpIkSZKKM2hIkiRJKs6gIUmSJKk4g4YkSZKk4ry8rSRJkjqCN+Ftv5I3\n4TVoSJIkqSN4E972Kn0TXoOGJEmSOoY34Z08XKMhSZIkqTiDhiRJkqTiDBqSJEmSijNoSJIkSSrO\noCFJkiSpuNqvOhURhwJnZeYREbE/cCGwDViVmUsax5wInARsBpZl5hV11yVJkiSpPrXOaETEe4EL\ngN0bm84FlmbmYmBaRBwTEfOBU4AXAK8APh4Ru9VZlyRJkqR61X3q1D3AcU3PD87M6xuPvwMcCRwC\nrMzMLZm5HrgbOLDmuiRJkiTVqNagkZlfB7Y0bepperwB2BPoA9Y1bR8EZtdZlyRJkqR67eo7g29r\netwHPAyspwoc228f1Zw5M+ntnV62OnWlgYFZ7S5hyps7dxbz5vXVMvZ4en3r1q3ce++9tdShse2/\n//5Mn+7PZY3fePp8YGAWrHmo5oo0mjp/5vtvevuV/PPd1UHjxxHx4sy8DjgKuBq4CVgWETOAPYAD\ngFVjDTQwsLHWQtU9+vsH213ClNffP8jatRtaPn48P8DG0+v33ns33775duYv2Lvl16iMB9bcz9HP\nG2T//Z/W7lLUIerqc3/mt994f+aPd2y1V8l/03d10HgPcEFjsfedwKWZORQRy4GVVKdWLc3MTbu4\nLkmTxPwFe7Ng4b7tLkOSpCmv9qCRmb8AXth4fDdw+AjHrABW1F2LJEmSpF3DG/ZJkiRJKs6gIUmS\nJKm4Xb1GQ5Kkcdu6dSurV9/X7jKmtH322c+rikkaF4OGJKnjrV59H28458vsPnteu0uZkh5dt5aL\n3v1aryomaVwMGpKkrrD77Hk8Zu6T2l2GJKlFrtGQJEmSVNyUmNHw3N7289xeSZKkqWVKBI3Vq+/z\nbsFt9MCa+zkaPLdXkiRpCpkSQQO8W7AkSZK0K7lGQ5IkSVJxBg1JkiRJxRk0JEmSJBVn0JAkSZJU\nnEFDkiRJUnEGDUmSJEnFGTQkSZIkFWfQkCRJklScQUOSJElScQYNSZIkScUZNCRJkiQV19uON42I\nW4B1jac/B84ELgS2Aasyc0k76pIkSZJUxi6f0YiI3QEy8yWNX28FzgWWZuZiYFpEHLOr65IkSZJU\nTjtmNA4CHhsRVwLTgfcDizLz+sb+7wBHAt9sQ22SJEmSCmjHGo2NwCcy80+AdwAXAz1N+zcAs9tQ\nlyRJkqRC2jGjcRdwD0Bm3h0RDwGLmvb3AQ+PNcicOTPp7Z3e0hsODMyCNQ9NoFSVMnfuLObN66tl\n7IGBWbWMq9bV+edrr3cP+3xys881zF6f3Er++bYjaLwFeDawJCIWAHsCV0XE4sy8FjgKuHqsQQYG\nNrb8hv39gxMsVaX09w+ydu2G2sZWe433z3c8P8Ds9e5hn09u9rmG2euTW8leb0fQWAF8ISKup7rK\n1JuBh4DPR8RuwJ3ApW2oS5IkSVIhuzxoZOZm4PgRdh2+i0uRJEmSVBNv2CdJkiSpOIOGJEmSpOIM\nGpIkSZKKM2hIkiRJKs6gIUmSJKk4g4YkSZKk4gwakiRJkoozaEiSJEkqzqAhSZIkqTiDhiRJkqTi\nDBqSJEmSijNoSJIkSSrOoCFJkiSpOIOGJEmSpOIMGpIkSZKKM2hIkiRJKs6gIUmSJKk4g4YkSZKk\n4gwakiRJkoozaEiSJEkqrrfdBQyLiB7gM8BBwCPA2zLzvvZWJUmSJGkiOmlG41hg98x8IXA6cG6b\n65EkSZI0QZ0UNA4DvguQmTcCz2tvOZIkSZImqmNOnQL2BNY1Pd8SEdMyc1uJwR9Yc3+JYTQBD6y5\nHxY8vtb3eHTd2lrH14512u+9vd4e9vnk1mm/9/Z5+9jrk1vp3/ueoaGhogNOVEScA/wwMy9tPP9l\nZj61zWVJkiRJmoBOOnXqBuBogIh4PnBHe8uRJEmSNFGddOrU14EjI+KGxvMT2lmMJEmSpInrmFOn\nJEmSJE0enXTqlCRJkqRJwqAhSZIkqTiDhiRJkqTiOmkxuEYQET3AZ4CDgEeAt2Xmfe2tSiVFxKHA\nWZl5RLtrUXvY51ODvS57ffKzz3+fMxqd71hg98x8IXA6cG6b61FBEfFe4AJg93bXorayzyc5e10N\n9vokZp//IYNG5zsM+C5AZt4IPK+95aiwe4Dj2l2E2s4+n/zsdYG9PtnZ59sxaHS+PYF1Tc+3RIR/\nbpNEZn4d2NLuOtR29vkkZ6+rwV6fxOzzP+Rf7s63Huhrej4tM7e1qxhJtbDPpanBXteUYtDofDcA\nRwNExPOBO9pbjmrS0+4C1Fb2+dRhr09t9vrUYJ83eNWpzvd14MiIuKHx/IR2FqPaDLW7ALWVfT51\n2OtTm70+NdjnDT1DQ/5eSJIkSSrLU6ckSZIkFWfQkCRJklScQUOSJElScQYNSZIkScUZNCRJkiQV\nZ9CQJEmSVJz30VAREfFq4H9R/Z3qAS7KzLN3csy3A0OZ+bmdHOca4EOZed3OjCNNdfa5NDXY6yrF\noKGdFhELgLOB52TmwxExE7g2In6WmZdPdNzMPL9YkZJ2in0uTQ32ukoyaKiEJ1D9XZoFPJyZGyPi\nTcCjEfFzYHFm/jIiFgMfzswjGt9I9APPBC4G5mfmKQAR8QngV8Dsxvj9wNNH2H8B8GngWcB04O8y\n818iYgbweeBg4BfA4+v/LZAmPftcmhrsdRXjGg3ttMz8CfCvwH0RcWNEnAX0Zua9wPa3nm9+fntm\nPgM4HzgmInoa218NfLnp+K8Ax46w/wzg5sz8Y2AxcEZE7AOcQjU9+yzgVOC/lfu00tRkn0tTg72u\nkgwaKiIz/wpYCHym8d8fRsRxY7zsxsZr1wK3AUdExIuqTflA09hrgVtH2P8y4OSIuBW4DtiD6puQ\nw4FLGq+9B7ih1OeUpjL7XJoa7HWV4qlT2mkRcTQwKzMvAb4IfDEi3ga8lerbi+FvLXbb7qW/bXr8\nz8BfApsaj7d38Qj7pwPHZ+ZtjTr2opqSfTu/H6K3TuyTSRpmn0tTg72ukpzRUAkbgTMjYiFAYzr0\nmcCPgQepvpEAOGaUMf4VeDHwcuCyEfZ/c4T9VwN/1XjPJwE/AZ4CfB94XUT0NGp64YQ/maRh9rk0\nNdjrKsagoZ2WmT8APgJcHhF3Aj+l+rv1UeDDwPKIuBEYaHrZ0HZjPAKsBG7MzI0jvMdI+z8C7BER\nd1D9IHpPZv6caqp3Q6OO84E7ynxSaeqyz6WpwV5XST1DQ9uv65EkSZKkneOMhiRJkqTiDBqSJEmS\nijNoSJIkSSrOoCFJkiSpOIOGJEmSpOIMGpIkSZKKM2hIkiRJKs6gIUmSJKm4/w/ZZDbEVtbf1gAA\nAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1190c6810>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "g = sns.factorplot(x=\"Survived\", col=\"Pclass\", data = titanic_df, col_wrap=4,kind=\"count\", size=4, aspect=.9,palette=\"Paired\")\n",
    "g.set_ylabels(\"survival count\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The next two tables are my favorites.  I created a groupby table to learn how to code with it, however I like the ability to use multiple groupings to show the survival rates with different passenger attributes.  The table shows survival rates Sex, Passenger Class and if a passenger traveled with Family or not.  The survival rates _almost_ sort by themselves, from Females traveling in Frist class to Males traveling in Third class.\n",
    "\n",
    "The two tables show who survived broken out by Sex, Passenger Class and if the person traveled with Family or not.  The first table shows absolute values.  The second table shows percentage values.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Family</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"6\" valign=\"top\">female</th>\n",
       "      <th rowspan=\"2\" valign=\"top\">1</th>\n",
       "      <th>0</th>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2</th>\n",
       "      <th>0</th>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>0</th>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"6\" valign=\"top\">male</th>\n",
       "      <th rowspan=\"2\" valign=\"top\">1</th>\n",
       "      <th>0</th>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2</th>\n",
       "      <th>0</th>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>0</th>\n",
       "      <td>264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>83</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Survived\n",
       "Sex    Pclass Family          \n",
       "female 1      0             34\n",
       "              1             60\n",
       "       2      0             32\n",
       "              1             44\n",
       "       3      0             60\n",
       "              1             84\n",
       "male   1      0             75\n",
       "              1             47\n",
       "       2      0             72\n",
       "              1             36\n",
       "       3      0            264\n",
       "              1             83"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class_sex_grouping = titanic_df[ ['Family','Sex','Pclass','Survived'] ].groupby([\"Sex\",\"Pclass\",\"Family\"]).count()\n",
    "class_sex_grouping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Family</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"6\" valign=\"top\">female</th>\n",
       "      <th rowspan=\"2\" valign=\"top\">1</th>\n",
       "      <th>0</th>\n",
       "      <td>0.970588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.966667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2</th>\n",
       "      <th>0</th>\n",
       "      <td>0.906250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.931818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>0</th>\n",
       "      <td>0.616667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.416667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"6\" valign=\"top\">male</th>\n",
       "      <th rowspan=\"2\" valign=\"top\">1</th>\n",
       "      <th>0</th>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.425532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2</th>\n",
       "      <th>0</th>\n",
       "      <td>0.097222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.277778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>0</th>\n",
       "      <td>0.121212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.180723</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Survived\n",
       "Sex    Pclass Family          \n",
       "female 1      0       0.970588\n",
       "              1       0.966667\n",
       "       2      0       0.906250\n",
       "              1       0.931818\n",
       "       3      0       0.616667\n",
       "              1       0.416667\n",
       "male   1      0       0.333333\n",
       "              1       0.425532\n",
       "       2      0       0.097222\n",
       "              1       0.277778\n",
       "       3      0       0.121212\n",
       "              1       0.180723"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "class_sex_grouping = titanic_df[ ['Family','Sex','Pclass','Survived'] ].groupby([\"Sex\",\"Pclass\",\"Family\"]).mean()\n",
    "class_sex_grouping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x119d998d0>"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAakAAAHqCAYAAAC+4LGZAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3X2YXHV5//F32FUkbAgJJCp4SSSyt2hb0VKLiPhQlBaB\n4kMfqC0KIghW0x8aK/hT6rOWGotYBIqlomIVFEFUfq0KVbHFZ6Gt3ohxBa2VYJZAGkET9vfHTOw2\n7GaXZHe+92ber+vai505M+f+7CHJZ8+ZM2fmjY2NIUlSRTu1DiBJ0mQsKUlSWZaUJKksS0qSVJYl\nJUkqy5KSJJU1rZKKiN+MiGsmuP+oiPhyRFwXESfOfDxJUj+bsqQiYiXwt8DOW9w/CKwCDgOeCpwU\nEUtmIaMkqU9NZ0/qZuDZE9y/P/DdzLwzM38BfBE4dCbDSZL625QllZmXAxsnWLQbsG7c7buAhTOU\nS5IkBrfjuXfSKarNFgB3TPWkjRs3jQ0ODmzHWEnSDmjeRHfen5LacgXfBh4ZEbsDG+gc6jtrqpWM\njm64HyPva8mSBaxZc9d2rWN7maH9/AoZWs+vkKH1/AoZWs/fUTIsWbJgwvvvT0mNAUTEscCumXlh\nRJwG/COdArswM3+8zQklSdrCtEoqM38AHNz9/kPj7v8k8MnZiSZJ6ne+mVeSVJYlJUkqy5KSJJVl\nSUmSytqe90lJkiawadMmRkZWz+g6ly3bl4GB/nuPqSUlSTNsZGQ1K866kvkLl87I+jasu42zVx7N\n8uX7zcj65hJLSpJmwfyFSxlatHdPZ37gA3/PV7/6ZTZu3MjAwACnnrqCiEdt07rOOWcVf/AHz2fp\n0gdv0/PPPPMMnv3s53HAAY/fpudvVqqkprOLPDo6xNq167f6mH7dLZbUv0ZGvs91132e97zn7wC4\n+ebv8uY3n8lFF12yTet72ctOm8l426xUSc3ELvL27hbPRFFakpJ6bWhoiJ/85CdcddUVHHTQwTzy\nkftxwQXv42UvO5mVK8/g4Q/fh49//KOMjq7ld37nSF71qj9j990XcdBBB/OpT32CD3zgUgDe+c6/\n5Nd//QlceumHWLnydN7whtfxpjf9JQ95yEO49trPcsMN3+RFLzqZt771jdx1150ArFjxSpYsOYCP\nfvQjfPKTV7DHHntyxx2jM/JzlSopaLOLPN72FmU/HzuW1M6eey7h7W9fxWWXfZiLLvpbdtllF178\n4lOYN2/C67YyOjrKRRddwsDAAJnf4Vvf+iaPfvRj+MY3vsaKFa/k0ks/BMzjyCN/l6uvvooXvvBE\nPvWpT3DKKS/n4osv4sADn8AxxzyXH/7wVt7yltdz3nnnctll/8D73/8RAE488bgZ+bnKlVQFrYtS\nku6vH/3oh8yfvyunn/46ADK/wyte8TL23HP8Z9GO/fK7hz50r18e8TnqqGP49Kc/wU9/ejtPetKh\n7LTT/7w76RnPOJyXvvQkjjzyGDZs2MAjHrEvq1ffzNe//lU+97l/YmxsjLvuupNbbrmFffddzuBg\np1b23//RM/JzWVKSNAs2rLutp+u6+ebvcuWVl/P2t69icHCQhz3sYQwNLWDhwoXcfvsaHv7wfchM\nli7tHCUav4d14IFP4Nxz38Xtt6/htNP+/H+td9ddhxgeDs455x0cccRRAOyzzyM4/PD9Oeywwxkd\nHeWqq65gn3324fvfX83Pf/5zBgYGuOmm5PDDj9jun92SkqQZtmzZvpy98ugZX+fWPOUpT+OWW0Y4\n8cTjmD9/PmNj9/Knf7qCwcEHsGrV23nwgx/KkiX/s1e15WHApz3tt/jqV7/CXnvtfZ/lRx/9bF75\nypdzxhlnAnDcccfz1re+kSuu+BgbNmzghBNOYvHixTz/+S/gJS85nt13X8wuu+wyIz/3vLGxsakf\nNYPWrLlr0oHf+953Of2Cf92uQ23rR3/EW086aJtfE9reDNs7f7paf35M6/kVMrSeXyFD6/kVMrSe\nv6NkWLJkwYQvnnlZJElSWZaUJKksS0qSVJYlJUkqy5KSJJVlSUmSyrKkJEllWVKSpLK84oTuwyvB\nS6rCktJ9eCV4SVVYUpqQV4KXVIGvSUmSyrKkJEllWVKSpLIsKUlSWZaUJKksS0qSVJYlJUkqy/dJ\nFTOdqz2AV3yQ1B8sqWK292oP4BUfJO04LKmCvNqDJHX4mpQkqSxLSpJUliUlSSrLkpIklWVJSZLK\nsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQk\nqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJ\nSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSprcKoHRMQ84FzgscDdwImZuXrc8ucDpwEb\ngYsy87xZyipJ6jPT2ZM6Btg5Mw8GTgdWbbH8LODpwCHAKyJi4cxGlCT1q+mU1CHA1QCZeT1w4BbL\nvwUsAnbp3h6bsXSSpL42nZLaDVg37vbGiBj/vH8HvgbcCFyVmXfOYD5JUh+b8jUp4E5gwbjbO2Xm\nvQAR8avAs4B9gP8GPhgRz83Mj062skWL5jM4ODDhstHRoenm3qrFi4dYsmTB1A+cpQyt51fIsD3z\n749ezKg8v0KG1vMrZGg9f0fOMJ2Sug44ErgsIg6is8e02TpgA3BPZo5FxG10Dv1NanR0w6TL1q5d\nP404U1u7dj1r1ty1zc+d6/MrZNie+dO1ZMmCWZ9ReX6FDK3nV8jQev6OkmGygptOSV0OPCMiruve\nPj4ijgV2zcwLI+IC4IsRcQ/wPeDvtzmlJEnjTFlSmTkGnLLF3TeNW34+cP4M55IkyTfzSpLqsqQk\nSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxL\nSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJSZLK\nsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQk\nqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJ\nSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZ\nlpQkqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksgZbB5AmsmnTJkZGVm/1MaOjQ6xdu37S\n5cuW7cvAwMBMR5PUQ5aUShoZWc2Ks65k/sKl2/T8Detu4+yVR7N8+X4znExSL1lSKmv+wqUMLdq7\ndQxJDU1ZUhExDzgXeCxwN3BiZq4et/w3gHd0b/4X8MeZ+fNZyCpJ6jPTOXHiGGDnzDwYOB1YtcXy\nC4AXZuahwNXAPjMbUZLUr6ZTUofQKR8y83rgwM0LImIY+ClwWkRcCyzOzO/OQk5JUh+aTkntBqwb\nd3tjRGx+3p7AE4F3AYcBh0XEU2c0oSSpb03nxIk7gQXjbu+Umfd2v/8pcHNm3gQQEVfT2dO6drKV\nLVo0n8HBiU8LHh0dmkacqS1ePMSSJQumfuAsZWg9v0KG7ZlfJcN0zPb650KG1vMrZGg9f0fOMJ2S\nug44ErgsIg4Cbhy3bDUwFBH7dk+meDJw4dZWNjq6YdJlW3vPy/2xdu161qy5a5ufO9fnV8iwPfOr\nZJjKkiULZnX9cyFD6/kVMrSev6NkmKzgplNSlwPPiIjrurePj4hjgV0z88KIeBHwoYgA+FJmfnqb\nU0qSNM6UJZWZY8ApW9x907jl1wK/ObOxJEny2n2SpMIsKUlSWZaUJKksS0qSVJYlJUkqy5KSJJVl\nSUmSyrKkJEllWVKSpLIsKUlSWZaUJKksS0qSVJYlJUkqy5KSJJVlSUmSyrKkJEllWVKSpLIsKUlS\nWZaUJKksS0qSVJYlJUkqy5KSJJVlSUmSyrKkJEllWVKSpLIsKUlSWZaUJKksS0qSVJYlJUkqy5KS\nJJVlSUmSyrKkJEllWVKSpLIsKUlSWZaUJKksS0qSVJYlJUkqy5KSJJVlSUmSyrKkJEllWVKSpLIs\nKUlSWZaUJKksS0qSVJYlJUkqy5KSJJVlSUmSyrKkJEllWVKSpLIsKUlSWZaUJKksS0qSVJYlJUkq\ny5KSJJVlSUmSyrKkJEllWVKSpLIsKUlSWZaUJKksS0qSVJYlJUkqy5KSJJVlSUmSyhpsHUBSTZs2\nbWJkZPVWHzM6OsTatesnXb5s2b4MDAzMdDT1EUtK0oRGRlaz4qwrmb9w6TY9f8O62zh75dEsX77f\nDCdTP7GkJE1q/sKlDC3au3UM9TFfk5IkleWelDQBX4+RarCkpAn4eoxUgyUlTcLXY6T2fE1KklTW\nlHtSETEPOBd4LHA3cGJm3udgfUScD/w0M8+Y8ZSSpL40nT2pY4CdM/Ng4HRg1ZYPiIiTgV+Z4WyS\npD43nZI6BLgaIDOvBw4cvzAingj8BnD+jKeTJPW16Zw4sRuwbtztjRGxU2beGxEPAc6ks7f1B9MZ\nuGjRfAYHJz4td3R0aDqrmNLixUMsWbJgm547Exlaz6+QYXvmV8jQev79MVsz3AZzZ/6OnGE6JXUn\nMH7yTpl5b/f73wP2AD4FPBTYJSK+k5kXT7ay0dENkw7a2ntO7o+1a9ezZs1d2/zcuT6/QobtmV8h\nQ+v507VkyYJZm+E2mBvzd5QMkxXcdErqOuBI4LKIOAi4cfOCzDwHOAcgIl4AxNYKSpKk+2M6JXU5\n8IyIuK57+/iIOBbYNTMvnL1okqR+N2VJZeYYcMoWd980wePeN1OhJEkC38wrSSrMkpIklWVJSZLK\nsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQk\nqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWUNtg4gaWKbNm1iZGT1Vh8zOjrE2rXrJ12+bNm+DAwM\nzHQ0qWcsKamokZHVrDjrSuYvXLpNz9+w7jbOXnk0y5fvN8PJpN6xpKTC5i9cytCivVvHkJrxNSlJ\nUlmWlCSpLEtKklSWJSVJKsuSkiSVZUlJksqypCRJZVlSkqSyLClJUlmWlCSpLEtKklSWJSVJKsuS\nkiSVZUlJksqypCRJZVlSkqSyLClJUlmWlCSpLEtKklTWYOsAklTVpk2bGBlZvdXHjI4OsXbt+q0+\nZtmyfRkYGJjJaH3DkpKkSYyMrGbFWVcyf+HSbV7HhnW3cfbKo1m+fL8ZTNY/LClJ2or5C5cytGjv\n1jH6lq9JSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKk\nsiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUl\nSSrLkpIklWVJSZLKGpzqARExDzgXeCxwN3BiZq4et/xYYAXwC+DGzDx1lrJKkvrMdPakjgF2zsyD\ngdOBVZsXRMSDgDcAT8nMJwO7R8SRs5JUktR3plNShwBXA2Tm9cCB45bdAxycmfd0bw/S2duSJGm7\nTaekdgPWjbu9MSJ2AsjMscxcAxARLwN2zczPzHxMSVI/mvI1KeBOYMG42ztl5r2bb3Rfs/pLYD/g\nOVOtbNGi+QwODky4bHR0aBpxprZ48RBLliyY+oGzlKH1/AoZtmd+hQyt51fI0Hr+/TFbMyr8fZyu\nXmznFhmmU1LXAUcCl0XEQcCNWyy/APhZZh4znYGjoxsmXbZ27frprGJKa9euZ82au7b5uXN9foUM\n2zO/QobW8ytkaD1/upYsWTBrMyr8fZyO2dwGvcowWcFNp6QuB54REdd1bx/fPaNvV+BrwPHAFyLi\nGmAMODszr9jmpJIkdU1ZUpk5Bpyyxd033Z91SJK0LXwzrySpLEtKklSWh+okSZPatGkTIyOrp3zc\n6OjQVk80WbZsXwYGJj6ze2ssKUnSpEZGVrPirCuZv3DpNq9jw7rbOHvl0Sxfvt/9fq4lJUnaqvkL\nlzK0aO8ms31NSpJUliUlSSrLkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrL\nkpIklWVJSZLKsqQkSWVZUpKksiwpSVJZlpQkqSxLSpJUliUlSSrLkpIklWVJSZLKGmwdQJI0uU2b\nNjEysnqrjxkdHWLt2vWTLl+2bF8GBgZmOlpPWFKSVNjIyGpWnHUl8xcu3abnb1h3G2evPJrly/eb\n4WS9YUlJUnHzFy5laNHerWM04WtSkqSyLClJUlmWlCSpLEtKklSWJSVJKsuSkiSVZUlJksryfVKS\nyur3qy3IkpJUWL9fbUGWlKTi+vlqC/I1KUlSYZaUJKksS0qSVJYlJUkqy5KSJJVlSUmSyrKkJEll\nWVKSpLIsKUlSWZaUJKksS0qSVJYlJUkqy5KSJJVlSUmSyrKkJEllWVKSpLIsKUlSWZaUJKksS0qS\nVJYlJUkqy5KSJJVlSUmSyrKkJEllWVKSpLIsKUlSWZaUJKksS0qSVJYlJUkqy5KSJJVlSUmSyrKk\nJEllWVKSpLIGp3pARMwDzgUeC9wNnJiZq8ctPwp4LfAL4KLMvHCWskqS+sx09qSOAXbOzIOB04FV\nmxdExGD39mHAU4GTImLJLOSUJPWh6ZTUIcDVAJl5PXDguGX7A9/NzDsz8xfAF4FDZzylJKkvTXm4\nD9gNWDfu9saI2Ckz751g2V3Awu0JtGHdbdvz9O1+/vauo/X8ChlmYn6FDK3nV8jQen6FDP59bLsN\n5o2NjW31ARHxDuBfMvOy7u1bMvPh3e9/FXhbZj6re3sV8MXM/Ng2J5IkqWs6h/uuA44AiIiDgBvH\nLfs28MiI2D0iHkjnUN+/zHhKSVJfms6e1Oaz+36te9fxwK8Du2bmhRHxLOBMYB7w3sw8bxbzSpL6\nyJQlJUlSK76ZV5JUliUlSSrLkpIklWVJSZLKms6beZuKiCE6ZxQ+BdgDuA34LHBJZq7vhwyt51fI\n0Hp+oQyLgCeNm/+FXs2ukqH1/AoZWs/vZYbSZ/dFxAnA84BPATcAPwYWAb9J571bl2Xme3fkDK3n\nV8jQen6FDN1rYr4NeBSQ4+Y/js57F1+bmT+ZrfkVMrSeXyFD6/lNMoyNjZX9Gh4e/u0plh+xo2do\n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\nAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x119a8c950>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "class_sex_grouping = titanic_df[ ['Family','Sex','Pclass','Survived'] ].groupby([\"Sex\",\"Pclass\",\"Family\"]).mean()\n",
    "class_sex_grouping.plot.bar(stacked=True, figsize = (7,7))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "###Conclusion\n",
    "My review of the Titanic data set focused on the survival rates of three passenger attributes, Sex (male or female), passenger class (1 = first, 2 = second, 3 = third), and if the passenger had family (1) or not (0).\n",
    "\n",
    "The Titanic carried 2,224 on its madden voyage.  The Titanic data set used in this project is a subset of the population.  The data set contains data on 891 passengers, 314 females and 577 males. Overall 38% passengers survived the sinking of the Titanic.  Broken out by Sex, 74% of female passengers survived, while 18% of male passengers survived.\n",
    "\n",
    "63% of first class passengers survived, 47% of second class passengers survived, while 24% of third class passengers survived.  Females traveling in first or second class had survival rates above 90%.  37% of males traveling in first class survived.\n",
    "\n",
    "38% of passengers who traveled on the Titanic traveled with family.  Of those that traveled with family, 51% survived.  Of those that did not travel with family, 30% survived.  Interestingly, males who traveled with family survived at a higher rate (and at a higher than the mean survival rate for males), than single males, across all passenger classes.  \n",
    "\n",
    "Even though I created a new column called AgeFill to address missing Age data.  I 'played' around with the age data, but in the end, I did not use it in my tables or plots.\n",
    "\n",
    "Further study would be needed to test how well some factors correlate with others.  For example, I noticed that the survival rates for males traveling with family were higher than single males, but was traveling with family statistically significant in terms of survival rates?  I would like to know more about statistics to figure that one out.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [Root]",
   "language": "python",
   "name": "Python [Root]"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
